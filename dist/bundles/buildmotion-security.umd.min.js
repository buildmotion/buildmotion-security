!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@buildmotion/foundation"),require("rxjs/add/observable/throw"),require("angular-rules-engine"),require("@buildmotion/logging"),require("@angular/core"),require("@angular/http"),require("rxjs/add/operator/map"),require("rxjs/add/operator/catch"),require("rxjs/add/operator/observeOn"),require("rxjs/add/operator/toPromise"),require("@angular/router"),require("@angular/forms"),require("@buildmotion/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@buildmotion/security",["exports","@buildmotion/foundation","rxjs/add/observable/throw","angular-rules-engine","@buildmotion/logging","@angular/core","@angular/http","rxjs/add/operator/map","rxjs/add/operator/catch","rxjs/add/operator/observeOn","rxjs/add/operator/toPromise","@angular/router","@angular/forms","@buildmotion/core","@angular/common"],r):r((e.buildmotion=e.buildmotion||{},e.buildmotion.security={}),e["buildmotion-foundation"],e.Rx.Observable,e["angular-rules-engine"],e["buildmotion-logging"],e.ng.core,e.ng.http,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.ng.router,e.ng.forms,e["buildmotion-core"],e.ng.common)}(this,function(e,r,t,i,o,n,s,a,c,u,l,m,p,h,f){"use strict";var g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])};function v(e,r){function t(){this.constructor=e}g(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}var b=function(){return function(e,r){this.SubscriptionStart=new Date,this.Name=e,this.EmailAddress=r}}(),d=function(e){function r(){return e.call(this)||this}return v(r,e),r.prototype.Do=function(e){this.businessProvider=e,this.serviceContext=e.serviceContext,this.loggingService=e.loggingService,this.execute()},r}(r.ActionBase),S=function(e){function r(r){var t=e.call(this)||this;return t.confirmationToken=r,t.actionName="ConfirmSubscriberAction",t}return v(r,e),r.prototype.preValidateAction=function(){console.log("Running the [preValidateAction] for the "+this.actionName+" action."),this.validationContext.addRule(new i.StringIsNotNullEmptyRange("UserNameIsValid","The user name value is not valid. Must be between 1-80 characters.",this.confirmationToken.UserName,1,80,!0)).addRule(new i.StringIsNotNullEmptyRange("ConfirmationTokenIsValid","The confirmation token value is not valid.",this.confirmationToken.ConfirmationToken,40,40,!0)),console.log("Running the [preValidateAction] for the "+this.actionName+" action.")},r.prototype.performAction=function(){this.loggingService.log(this.actionName,o.Severity.Information,"Running the [performAction] for the "+this.actionName+"."),this.response=this.businessProvider.subscriberApiService.confirmSubscriber(this.confirmationToken)},r}(d),y=function(e){function r(r){var t=e.call(this)||this;return t.subscriber=r,t.actionName="CreateUserSubscriptionAction",t}return v(r,e),r.prototype.preValidateAction=function(){console.log("Running the [preValidateAction] for the "+this.actionName+" action."),this.validationContext.addRule(new i.StringIsNotNullEmptyRange("NameIsValid","The name value is not valid. Must be between 1-40 characters.",this.subscriber.Name,2,40,!0)).addRule(new i.StringIsNotNullEmptyRange("EmailIsValid","The email address value is not valid. Must be between 8-60 characters.",this.subscriber.EmailAddress,8,60,!0))},r.prototype.performAction=function(){this.loggingService.log(this.actionName,o.Severity.Information,"Running the [performAction] for the "+this.actionName+"."),this.response=this.businessProvider.subscriberApiService.registerSubscriber(this.subscriber)},r}(d),N=function(e){function r(r,t,i){var o=e.call(this,r,i)||this;return o.http=r,o.httpService=t,o.loggingService=i,o.url="/api/security",o.serviceName="SecurityHttpService",o}return v(r,e),r.prototype.registerSubscriber=function(e){var r="api/subscriber/register";this.loggingService.log(this.serviceName,o.Severity.Information,this.serviceName+" preparing to call: "+r);var t=JSON.stringify(e),i=this.httpService.createRequestOptions(s.RequestMethod.Post,this.httpService.createHeader(!1),r,t);return this.httpService.executeRequest(i)},r.prototype.confirmSubscriber=function(e){var r="api/subscriber/confirmation";this.loggingService.log(this.serviceName,o.Severity.Information,this.serviceName+" preparing to call: "+r);var t=JSON.stringify(e),i=this.httpService.createRequestOptions(s.RequestMethod.Post,this.httpService.createHeader(!1),r,t);return this.httpService.executeRequest(i)},r.prototype.retrieveSubscribers=function(){var e="api/subscriber";this.loggingService.log(this.serviceName,o.Severity.Information,this.serviceName+" preparing to call: "+e);var r=this.httpService.createRequestOptions(s.RequestMethod.Get,this.httpService.createHeader(!1),e,"");return this.httpService.executeRequest(r)},r.prototype.removeSubscriber=function(e){var r="api/subscriber/remove";this.loggingService.log(this.serviceName,o.Severity.Information,this.serviceName+" preparing to call: "+r);var t=JSON.stringify(e),i=this.httpService.createRequestOptions(s.RequestMethod.Post,this.httpService.createHeader(!1),r,t);return this.httpService.executeRequest(i)},r}(r.HttpBaseService);N.decorators=[{type:n.Injectable}],N.ctorParameters=function(){return[{type:s.Http,decorators:[{type:n.Inject,args:[s.Http]}]},{type:r.HttpBaseService,decorators:[{type:n.Inject,args:[r.HttpBaseService]}]},{type:o.LoggingService}]};var x=function(e){function r(r,t){var i=e.call(this,r)||this;return i.loggingService=r,i.subscriberApiService=t,i.serviceName="SubscriberBusinessProviderService",i.loggingService.log(i.serviceName,o.Severity.Information,"Running the constructor for "+i.serviceName),i}return v(r,e),r.prototype.registerSubscriber=function(e){var r=new y(e);return r.Do(this),r.response},r.prototype.confirmSubscriber=function(e){var r=new S(e);return r.Do(this),r.response},r}(r.ServiceBase);x.decorators=[{type:n.Injectable}],x.ctorParameters=function(){return[{type:o.LoggingService},{type:N,decorators:[{type:n.Inject,args:[N]}]}]};var R=function(e){function r(r,t){var i=e.call(this,r)||this;return i.businessProvider=t,i.serviceName="SecurityService",i.businessProvider.serviceContext=i.serviceContext,i.businessProvider.loggingService=i.loggingService,i}return v(r,e),r.prototype.registerSubscriber=function(e){return this.loggingService.log(this.serviceName,o.Severity.Information,this.serviceName+" preparing to create a new subscription."),this.businessProvider.registerSubscriber(e)},r.prototype.confirmSubscriber=function(e){return this.loggingService.log(this.serviceName,o.Severity.Information,"Preparing to confirm subscriber."),this.businessProvider.confirmSubscriber(e)},r}(r.ServiceBase);R.decorators=[{type:n.Injectable}],R.ctorParameters=function(){return[{type:o.LoggingService},{type:x}]};var I=function(e){function r(r,t,i,o){var s=e.call(this,"SubscribeComponent",t,o)||this;return s.securityService=r,s.formBuilder=i,s.subscribe=new n.EventEmitter,s}return v(r,e),r.prototype.ngOnInit=function(){this.buildForm()},r.prototype.buildForm=function(){this._form=this.formBuilder.group({subscriberName:["",p.Validators.required],emailAddress:["",p.Validators.required]})},r.prototype.submitForm=function(){this.securityService.serviceContext.Messages=[],this.subscriber=new b(this._form.value.subscriberName,this._form.value.emailAddress),this.subscribeUser(this.subscriber)},r.prototype.subscribeUser=function(e){var r=this;this.securityService.registerSubscriber(e).subscribe(function(e){return r.handleSubscribeUser(e)},function(e){return r.handleServiceErrors(e,r.securityService.serviceContext)},function(){return r.finishRequest(r.componentName)})},r.prototype.handleSubscribeUser=function(e){this.loggingService.log(this.componentName,o.Severity.Information,"[handleSubscribeUser]: Preparing to handle the response from the [SecurityService] in the "+this.componentName+"."),e&&(e.IsSuccess?(this.loggingService.log(this.componentName,o.Severity.Information,"Successfully processed request to create subscriber. Prepare to download..."),this.subscribe.emit(e)):this.handleServiceErrors(e,this.securityService.serviceContext))},r}(h.ComponentBase);I.decorators=[{type:n.Component,args:[{selector:"bm-subscribe",template:'<buildmotion-alert [alertNotification]="alertNotification" [hasMessage]="alertNotification.showAlert"></buildmotion-alert>\n  \x3c!-- SUBSCRIBE SIGN-UP FORM --\x3e\n  <form [formGroup]="_form" (ngSubmit)="submitForm()">\n    \x3c!-- SUBSCRIBER NAME --\x3e\n    <div class="input-group form-group-no-border">\n      <span class="input-group-addon">\n        <i class="now-ui-icons users_circle-08"></i>\n      </span>\n      <input type="text" formControlName="subscriberName" class="form-control" placeholder="Name...">\n    </div>\n    \x3c!-- SUBSCRIBER EMAIL --\x3e\n    <div class="input-group form-group-no-border">\n      <span class="input-group-addon">\n        <i class="now-ui-icons ui-1_email-85"></i>\n      </span>\n      <input type="text" formControlName="emailAddress" class="form-control" placeholder="Email...">\n    </div>\n    \x3c!-- SUBSCRIBE BUTTON --\x3e\n    <button class="btn btn-neutral btn-round btn-lg">Subscribe\n      <i class="fa fa-check ml-1"></i>\n    </button>\n  </form>\n  \x3c!-- SUBSCRIBE SIGN-UP FORM --\x3e'}]}],I.ctorParameters=function(){return[{type:R},{type:o.LoggingService},{type:p.FormBuilder},{type:m.Router}]},I.propDecorators={subscribe:[{type:n.Output}]};var C=function(){return function(e,r){this.UserName=e,this.ConfirmationToken=r}}(),P=function(e){function r(r,t,i,o,s){var a=e.call(this,"ConfirmSubscriptionComponent",t,s)||this;return a.securityService=r,a.formBuilder=i,a.route=o,a.confirm=new n.EventEmitter,a.email="",a.confirmationToken="",a}return v(r,e),r.prototype.ngOnInit=function(){this.loggingService.log(this.componentName,o.Severity.Information,"Running [ngOnInit] for "+this.componentName),this.retrieveQueryParams()},r.prototype.retrieveQueryParams=function(){var e=this;this.loggingService.log(this.componentName,o.Severity.Information,"Preparing to retrieve the [queryParams] from "+this.componentName+".");try{this.route.params.map(function(e){return e.email}).subscribe(function(r){return e.handleEmailParam(r)},function(r){return e.handleServiceErrors(r)},function(){return e.finishRequest("retrieveQueryParams")}),this.route.params.map(function(e){return e.confirmationToken}).subscribe(function(r){return e.handleConfirmationTokenParam(r)},function(r){return e.handleServiceErrors(r)},function(){return e.finishRequest("retrieveQueryParams")})}catch(r){this.handleServiceErrors(r)}},r.prototype.handleConfirmationTokenParam=function(e){e&&(this.confirmationToken=e,this.buildForm())},r.prototype.handleEmailParam=function(e){e&&(this.email=e)},r.prototype.buildForm=function(){this._form=this.formBuilder.group({UserName:[this.email,p.Validators.required],ConfirmationToken:[this.confirmationToken,p.Validators.required]})},r.prototype.submitForm=function(){var e=this;this.loggingService.log(this.componentName,o.Severity.Information,"Form: {form | json}"),this.resetAlertNotifications();var r=new C(this._form.value.UserName,this._form.value.ConfirmationToken);this.securityService.confirmSubscriber(r).subscribe(function(r){return e.handleSubmit(r)},function(r){return e.handleServiceErrors(r,e.securityService.serviceContext)},function(){return e.finishRequest(e.componentName)})},r.prototype.handleSubmit=function(e){this.loggingService.log(this.componentName,o.Severity.Information,"Preparing to handle the response from the "+this.securityService.serviceName+" in the "+this.componentName+"."),e?e.IsSuccess?(this.loggingService.log(this.componentName,o.Severity.Information,"Successfully processed subscriber confirmation."),this.confirm.emit(e)):(this.loggingService.log(this.componentName,o.Severity.Error,this.componentName+"; Status is fail."),this.showResponseErrors(e)):this.loggingService.log(this.componentName,o.Severity.Error,"Unexpected service error...I guess the application pooped its pants, ouch!!")},r}(h.ComponentBase);P.decorators=[{type:n.Component,args:[{selector:"bm-confirm-subscription",template:'<buildmotion-alert [alertNotification]="alertNotification" [hasMessage]="alertNotification.showAlert"></buildmotion-alert>\n  <form [formGroup]="_form" (ngSubmit)="submitForm()">\n    <div class="md-form">\n      <i class="fa fa-envelope prefix"></i>\n      <input type="text" id="UserName" class="form-control" formControlName="UserName">\n      <label for="UserName">Your email address.</label>\n    </div>\n    <div class="md-form">\n      <i class="fa fa-person prefix"></i>\n      <input type="text" id="ConfirmationToken" class="form-control" formControlName="ConfirmationToken">\n      <label for="ConfirmationToken">Enter token from email.</label>\n    </div>\n    <div class="text-xs-center">\n      <button class="btn btn-lime" type="submit">Confirm Account</button>\n    </div>\n  </form>'}]}],P.ctorParameters=function(){return[{type:R},{type:o.LoggingService},{type:p.FormBuilder},{type:m.ActivatedRoute},{type:m.Router}]},P.propDecorators={confirm:[{type:n.Output}]};var q=function(){return function(){}}();q.decorators=[{type:n.NgModule,args:[{imports:[h.BuildMotionCoreModule,r.BuildMotionFoundationModule,o.BuildMotionLoggingModule,f.CommonModule,p.FormsModule,p.ReactiveFormsModule,s.HttpModule,m.RouterModule],declarations:[I,P],exports:[P,I],providers:[N,x]}]}],q.ctorParameters=function(){return[]};var B=function(){function e(e,r){this.UserName=e,this.Password=r}return e.prototype.toString=function(){return"UserName: "+this.UserName+"; Password: ************"},e}(),E=function(){function e(){}return e.prototype.toString=function(){return"access_token: "+this.access_token+"; expires_in: "+this.expires_in+"; token_type: "+this.token_type},e}(),A=function(){return function(){this.SubscriptionStart=new Date}}(),M=function(){return function(){}}();e.BuildMotionSecurityModule=q,e.BuildMotionSecurityService=R,e.SubscribeComponent=I,e.ConfirmationToken=C,e.Credentials=B,e.OAuthResponse=E,e.Subscriber=b,e.SubscriberItem=A,e.UserAccount=M,e.ɵb=N,e.ɵa=x,e.ɵc=P,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=buildmotion-security.umd.min.js.map
