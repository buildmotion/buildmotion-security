{"version":3,"file":"security.service.js","sourceRoot":"","sources":["../src/app/security.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,OAAO,EAAE,WAAW,EAAmB,MAAM,wBAAwB,CAAC;AACtE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAG/D,OAAO,EAAE,iCAAiC,EAAE,MAAM,iDAAiD,CAAC;;IAG/D,mCAAW;IAE9C,yBACE,cAA8B,EACtB;QAFV,YAIE,kBAAM,cAAc,CAAC,SACrB;QAHQ,sBAAgB,GAAhB,gBAAgB;;KAGxB;;;;;IAED,4CAAkB;;;;IAAlB,UAAmB,UAAsB;QACxC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAK,IAAI,CAAC,WAAW,6CAA0C,CAAC,CAAC;QAC/H,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;KAC7D;;gBAbF,UAAU;;;;gBALF,cAAc;gBAGd,iCAAiC;;0BAN1C;EASqC,WAAW;SAAnC,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ServiceBase, ServiceResponse } from 'buildmotion-foundation';\nimport { LoggingService, Severity } from 'buildmotion-logging';\nimport { Subscriber } from './models/subscriber.model';\n\nimport { SubscriberBusinessProviderService } from './business/subscriber-business-provider.service';\n\n@Injectable()\nexport class SecurityService extends ServiceBase {\n\n  constructor(\n    loggingService: LoggingService,\n    private businessProvider: SubscriberBusinessProviderService\n  ) {\n    super(loggingService)\n   }\n\n   registerSubscriber(subscriber: Subscriber): Observable<ServiceResponse> {\n    this.loggingService.log(this.serviceName, Severity.Information, `${this.serviceName} preparing to create a new subscription.`);\n    return this.businessProvider.registerSubscriber(subscriber);\n  }\n}\n"]}